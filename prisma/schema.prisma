generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  emailLower   String?  @unique
  name         String?
  passwordHash String
  role         String   @default("CUSTOMER")
  createdAt    DateTime @default(now())
  cartItems    CartItem[]
  orders       Order[]

  @@index([emailLower])
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  priceCents  Int
  sku         String    @unique
  category    String?
  stock       Int       @default(0)
  imageUrl    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  orderItems  OrderItem[]
  cartItems   CartItem[]
}

model Order {
  id         Int        @id @default(autoincrement())
  user       User       @relation(fields: [userId], references: [id])
  userId     Int
  status     String      @default("PENDING")
  totalCents Int
  createdAt  DateTime   @default(now())
  items      OrderItem[]
  tx         Transaction?

  @@index([userId])
  @@index([createdAt])
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  order      Order   @relation(fields: [orderId], references: [id])
  orderId    Int
  product    Product @relation(fields: [productId], references: [id])
  productId  Int
  qty        Int
  priceCents Int
}

model Transaction {
  id          Int      @id @default(autoincrement())
  order       Order    @relation(fields: [orderId], references: [id])
  orderId     Int      @unique
  amountCents Int
  status      String
  provider    String   @default("MOCK")
  createdAt   DateTime @default(now())
}

model CartItem {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  qty       Int

  @@unique([userId, productId], name: "userId_productId")
}
